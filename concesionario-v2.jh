enum Estado {
    RESERVADO, EXPIRADO, VALIDADO, CONFIRMADO, CANCELADO, FINALIZADO
}

enum Dia {
    LUNES, MARTES, MIERCOLES, JUEVES, VIERNES, SABADO, DOMINGO, TODOS
}

enum TipoRecurso {
    BAHIA, LAVADERO, ASESOR, TECNICO
}

enum Marca {
    TOYOTA, LEXUS, HINO
}

enum TipoTarea {
    CAMBIO, INSPECCION
}

enum Categoria {
    AUTOMOVIL, CARGA, REMOLQUE, TRANSPORTE
}

entity Turno {
	fechaHora Instant required,
    estado Estado required
}

entity Cliente {
	nombre String required,
    apellido String required,
    email String required pattern(/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/),
    telefono String,
    celular String
}

entity Vehiculo {
    anio Integer required min(1950) max(2018),
    patente String required minlength(6) maxlength(7) pattern(/^[A-Z]{2}\d{3}[A-Z]{2}|[A-Z]{3}[0-9]{3}$/),
    kilometraje Integer required
}

entity Modelo {
    codigo String required minlength(4) maxlength(4),
    nombre String required,
    marca Marca required, 
    categoria Categoria required,
    anioInicioProduccion Integer required min(1950) max(2018),
    anioFinProduccion Integer min(1950) max(2018)    
}

entity TipoDeServicio {
	nombre String required,
    codigo String required minlength(4) maxlength(4),
    interno Boolean,
    tipoDeRecurso TipoRecurso
}

entity Servicio {
	nombre String required,
    codigo String required minlength(4) maxlength(4),
    kilometraje Integer required,
    duracion Integer required,
    precio Integer required,
    categoria Categoria required
}

entity Tarea {
    codigo String required minlength(3) maxlength(4),
    descripcion String required,
    tipo TipoTarea required
}

entity Agenda {	
    nombre String required,
    tipoDeRecurso TipoRecurso required,
    fechaDesde LocalDate,
    fechaHasta LocalDate,
    duracionEvento Integer,
    estado String    
}

entity Intervalo {	
    fechaHoraDesde Instant,
    duracion Integer,
    dia Dia,
    repite Boolean
}

entity DiaNoLaborable {	
	fecha LocalDate,
    dia Dia,
    repite Boolean
}

relationship ManyToOne {
	Turno{agenda(nombre) required} to Agenda{turno(fechaHora) required}
}

relationship ManyToMany {
	Agenda{intervalo(fechaHoraDesde)} to Intervalo{agenda(fechaDesde)}
}
relationship ManyToMany {
	Agenda{diaNoLaborable(dia)} to DiaNoLaborable{agenda(fechaDesde)}
}

relationship ManyToMany {
	Turno{servicio(nombre) required} to Servicio{turno(fechaHora) required}
}

relationship ManyToMany {
	Servicio{tarea(codigo) required} to Tarea{servicio(nombre) required}
}

relationship ManyToOne {
	Servicio{tipo(codigo) required} to TipoDeServicio{servicio(codigo) required} 
}

relationship ManyToOne {
	Vehiculo{modelo(nombre) required} to Modelo{vehiculo(patente) required}
}

relationship OneToMany {
	Cliente{turno(fechaHora) required} to Turno{cliente(apellido) required}
}

relationship OneToMany {
	Vehiculo{turno(fechaHora) required} to Turno{vehiculo(patente) required}
}

paginate Cliente with pagination

dto * with mapstruct

// Set service options to all except few
service all with serviceImpl// except Employee, Job